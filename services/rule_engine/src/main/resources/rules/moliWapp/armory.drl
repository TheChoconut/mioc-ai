package rules.moliWapp;

import java.util.ArrayList;
import java.util.Collection;
import com.mindsmiths.armory.event.UserConnected;
import com.mindsmiths.armory.event.UserDisconnected;
import com.mindsmiths.armory.event.Submit;
import com.mindsmiths.sdk.utils.Utils;
import signals.AddReview;
import agents.MoliWapp;

rule "Show NPS flow on Armory"
    when
        signal: UserConnected() from entry-point "signals"
        agent: MoliWapp(feedback == "" || feedback == null)
    then
        agent.showNPSFlow();
        delete(signal);
end

rule "User submits their name"
    when
        signal: Submit(screenId == "askForName") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setName(signal.getParamAsString("name"))
        };
        delete(signal);
end

// User clicked on "Miočanin" on screen "askForGender"
rule "Male gender"
    when
        signal: Submit(buttonId == "askForGenderStartedm", screenId == "askForGender") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setGender("M")
        };
        delete(signal);
end

// User clicked on "Miočanka" on screen "askForGender"
rule "Female gender"
    when
        signal: Submit(buttonId == "askForGenderStartedf", screenId == "askForGender") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setGender("F")
        };
        delete(signal);
end

// User clicked on "Prvi" on screen "askForAge"
rule "1st year"
    when
        signal: Submit(buttonId == "askForAgeStarted1", screenId == "askForAge") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setAge(1)
        };
        delete(signal);
end

// User clicked on "Drugi" on screen "askForAge"
rule "2nd year"
    when
        signal: Submit(buttonId == "askForAgeStarted2", screenId == "askForAge") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setAge(2)
        };
        delete(signal);
end

// User clicked on "Treći" on screen "askForAge"
rule "3rd year"
    when
        signal: Submit(buttonId == "askForAgeStarted3", screenId == "askForAge") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setAge(3)
        };
        delete(signal);
end

// User clicked on "Četvrti" on screen "askForAge"
rule "4th year"
    when
        signal: Submit(buttonId == "askForAgeStarted4", screenId == "askForAge") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setAge(4)
        };
        delete(signal);
end

rule "User submits their class letter"
    when
        signal: Submit(screenId == "askForClassLetter") from entry-point "signals"
        agent: MoliWapp()
    then
        String letter = signal.getParamAsList("classLetter", String.class).get(0);
        modify(agent) {
            setClassLetter(letter)
        };
        delete(signal);
end

// User selected rating on screen "askForRating"
rule "Rating"
    when
        signal: Submit(screenId == "askForRating") from entry-point "signals"
        agent: MoliWapp()
    then
        modify(agent) {
            setRating(signal.getParamAsInteger("nps"))
        };
        delete(signal)
end

// User inputted feedback on screen "askForFeedback"
rule "Feedback"
    when
        signal: Submit(textareaInput: getParamAsString("feedback"), screenId == "askForFeedback") from entry-point "signals"
        agent: MoliWapp()
    then
        String feedback = signal.getParamAsString("feedback");
        if(feedback == null)
            feedback = "";
            
        modify(agent) {
            setFeedback(feedback)
        };

        agent.send("SMITH", new AddReview(agent.getId(), agent.getGender(), agent.getAge(), agent.getRating(), agent.getFeedback(), Utils.now()));
        agent.askForThanksMessage();
        delete(signal);
end
